spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.username=admin
#spring.datasource.password=root
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.hibernate.ddl-auto=update


# used this  to send reservation email
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=303581456@qq.com
spring.mail.password=tphxhesyojclcbdh
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback=false
spring.mail.properties.mail.smtp.socketFactory.port=465
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.qq.com

#spring.mail.password=hnxkspjhgtdxeaji
spring.datasource.url=jdbc:postgresql://127.0.0.1:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

BASE_URL=http://localhost:8080/

STRIPE_SECRET_KEY=pk_test_51Q3LR1GMspNX4mXfvkZYs9D06SuLoisjBKaJQdZxZK3leteIhwRbt2YjbP6gk3l8gcnMmunLNumW60QbKhLE7oyZ00Ej5uyYlo

# #引入google api
spring.security.oauth2.client.registration.google.client-id=434151543350-t4ktvdif0hj644m98m4eivoh44m35t6v.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-authentication-method=post
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.user-name-attribute=id

